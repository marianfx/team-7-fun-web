
module.exports.queries = {

    // FX
    friends_paginated: 'SELECT P.PLAYERID, P.PLAYERNAME, P.PHOTOURL FROM FRIENDS F INNER JOIN PLAYERS P ON P.PLAYERID = F.PLAYER2ID WHERE F.PLAYER1ID = ? AND P.PLAYERID > ? ORDER BY P.PLAYERID ASC LIMIT ?',

    all_friends: 'SELECT P.PLAYERID, P.PLAYERNAME, P.PHOTOURL FROM FRIENDS F INNER JOIN PLAYERS P ON P.PLAYERID = F.PLAYER2ID WHERE F.PLAYER1ID = ?',

    user_details: 'SELECT P.PLAYERID, G.USERNAME, G.EMAIL, G.REGISTRATIONDATE, P.PLAYERNAME, P.PHOTOURL, P.EXPERIENCE, P.PLAYERLEVEL, P.COOKIES, P.S_LUCK, P.S_TIME, P.S_CHEAT, P.SKILLPOINTS, P.LASTROUNDID, P.GUILDID, PS.WINS, PS.LOSES, PS.PERFECTROUNDS, PS.DAILYLOGINS, PS.LASTLOGINDATE FROM GAMEUSERS G JOIN PLAYERS P ON G.PLAYERID = P.PLAYERID JOIN PLAYERSSTATISTICS PS ON PS.PLAYERID = P.PLAYERID WHERE G.PLAYERID = ?',

    user_lastround: 'SELECT LASTROUNDID FROM PLAYERS WHERE PLAYERID = ?',

    all_courses: 'SELECT C.COURSEID, C.TITLE, C.SHORTDESC, C.HASHTAG, C.PHOTOURL, C.AUTHOR, DATE_FORMAT(C.CREATIONDATE, \'%W-%c-%Y, %k:%i\') CREATIONDATE, R.ROUNDID, R.NAME FROM COURSES C JOIN ROUNDS R ON C.COURSEID = R.COURSEID ORDER BY C.COURSEID ASC, R.ROUNDID ASC',

    courses_upon_x: 'SELECT C.COURSEID, C.TITLE, C.SHORTDESC, C.HASHTAG, C.PHOTOURL, C.AUTHOR, DATE_FORMAT(C.CREATIONDATE, \'%W-%c-%Y, %k:%i\') CREATIONDATE, R.ROUNDID, R.NAME FROM COURSES C JOIN ROUNDS R ON C.COURSEID = R.COURSEID WHERE R.ROUNDID < ? ORDER BY C.COURSEID ASC, R.ROUNDID ASC',

    specifid_course: 'SELECT C.COURSEID, C.TITLE, C.SHORTDESC, C.HASHTAG, C.PHOTOURL, C.AUTHOR, C.CREATIONDATE, R.ROUNDID, R.NAME, R.NROFQUESTIONS, R.COURSE, R.ROUNDTIME FROM COURSES C JOIN ROUNDS R ON C.COURSEID = R.COURSEID WHERE C.COURSEID = ?',

    player_inv: 'SELECT I.ITEMID, IT.NAME, IT.DESCRIPTION, IT.SKILL, IT.SKILLPOINTS, IT.COOKIESCOST, IT.FILEPATH FROM INVENTORIES I JOIN ITEMS IT ON IT.ITEMID = I.ITEMID WHERE I.PLAYERID = ?',

    questions_loader: "CALL loadQuestions(?, ?)",


    // GRZ
    update_starttime: 'UPDATE PLAYERS SET LASTROUNDSTART = NOW() WHERE PLAYERID = ?; COMMIT;',

    null_starttime: 'UPDATE PLAYERS SET LASTROUNDSTART = NULL WHERE PLAYERID = ?; COMMIT;',

    getpast_roundtime: 'SELECT round(TIMESTAMPDIFF(SECOND, LASTROUNDSTART, NOW()), 2) AS DIFFERENCE from PLAYERS WHERE PLAYERID = ?',

    get_roundrow: 'SELECT * FROM ROUNDS WHERE ROUNDID = ?',

    update_experience: 'CALL update_experience(?, ?, ?)',

    get_lastroundstart: 'SELECT LASTROUNDSTART FROM PLAYERS WHERE PLAYERID = ?',

    get_round_course: 'SELECT COURSE FROM ROUNDS WHERE ROUNDID = ?',

    add_time_player:'CALL add_time(?)',

    update_skill:'CALL update_skill(?, ?, ?)',

    // CZR
    get_friends_count: 'SELECT COUNT(*) AS FRIENDSCOUNT FROM FRIENDS WHERE PLAYER1ID = ?',

    are_friends: 'SELECT 1 AS YES FROM FRIENDS WHERE PLAYER1ID = ? AND PLAYER2ID = ?',

    use_luck: 'CALL useLuck(?, @p_random1, @p_random2, @p_what); SELECT @p_random1; SELECT @p_random2; SELECT @p_what;',

    add_skill: 'CALL addSkillTransaction(?, ?)',

    load_skills: 'SELECT SKILLPOINTS, S_CHEAT, S_LUCK, S_TIME, PLAYERLEVEL FROM PLAYERS WHERE PLAYERID = ?',

    top_players: 'SELECT PHOTOURL, PLAYERNAME, @COLUMNNAME AS VALUE FROM PLAYERS p JOIN playersstatistics s ON p.PLAYERID = s.PLAYERID ' +
                 ' ORDER BY @COLUMNNAME DESC LIMIT 10',

    reload_shop: 'SELECT * FROM ITEMS WHERE COOKIESCOST <> 0 AND ITEMID <= ? AND ITEMID NOT IN ' +
                '(SELECT it.ITEMID FROM ITEMS it JOIN INVENTORIES inv ON it.ITEMID = inv.ITEMID AND inv.PLAYERID = ?)',

    get_shop: 'SELECT * FROM ITEMS WHERE COOKIESCOST <> 0 AND ITEMID NOT IN ' +
            '(SELECT it.ITEMID FROM ITEMS it JOIN INVENTORIES inv ON it.ITEMID = inv.ITEMID AND inv.PLAYERID = ?) ' +
            'AND ITEMID > ? ORDER BY ITEMID ASC LIMIT ?',

    buy_item: 'CALL itemTransaction(?, ?)',

    //DRN
    getminRound: 'CALL getMinRoundID(?)',

    update_end_battle:'CALL update_battle_end(?, ?)',

    decremente_S_TIME: 'UPDATE PLAYERS SET S_TIME = ? WHERE PLAYERID = ?; COMMIT;',

    // ADMINISTRATION

    insert_round:"INSERT INTO  ROUNDS (NAME, NROFQUESTIONS, COURSE, ROUNDTIME ,COURSEID , POINTS) VALUES(?, ?, ?, ?, ?, ?); COMMIT;",

    insert_course:"INSERT INTO  COURSES (TITLE, SHORTDESC, HASHTAG, PHOTOURL, AUTHOR) VALUES(?, ?, ?, ?, ?); COMMIT;",

    insert_question:"INSERT INTO QUESTIONS (QUESTION, ANSWERA, ANSWERB, ANSWERC, ANSWERD, CORRECTANSWER, ROUNDID ) VALUES(?, ?, ?, ?, ?, ?, ?); COMMIT;",

    update_experience_battle: 'UPDATE PLAYERS SET EXPERIENCE = ?, PLAYERLEVEL = ? WHERE PLAYERID = ?; COMMIT;'
};
